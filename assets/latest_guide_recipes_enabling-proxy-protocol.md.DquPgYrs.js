import{_ as s,c as e,o as a,a1 as i}from"./chunks/framework.S8gmgOtk.js";const u=JSON.parse('{"title":"Enabling Proxy Protocol","description":"","frontmatter":{},"headers":[],"relativePath":"latest/guide/recipes/enabling-proxy-protocol.md","filePath":"latest/guide/recipes/enabling-proxy-protocol.md"}'),n={name:"latest/guide/recipes/enabling-proxy-protocol.md"},t=i(`<h1 id="enabling-proxy-protocol" tabindex="-1">Enabling Proxy Protocol <a class="header-anchor" href="#enabling-proxy-protocol" aria-label="Permalink to &quot;Enabling Proxy Protocol&quot;">​</a></h1><p>Most of the time, the IP address received by your proxy will be the one of the cloud provider&#39;s load balancer, thus not the one of the connecting player.</p><p>This is a problem because Shulker configures the proxies to expect that the connecting IP is the same than the one the player used to authenticate agaisn&#39;t Mojang&#39;s servers. This is one way to prevent spoofing attacks.</p><p>The Proxy Protocol is a protocol that allows the load balancer to send the real IP address of the client to the underlying service, here the proxy. It is supported by most cloud providers.</p><p>To enable it, you need to set the <code>proxyProtocol</code> option to <code>true</code> in the configuration of your proxy:</p><div class="language-yaml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark has-focused-lines vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">apiVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">shulkermc.io/v1alpha1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ProxyFleet</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">metadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">proxy</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">spec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  clusterRef</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">my-cluster</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  replicas</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    spec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line has-focus"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span></span>
<span class="line has-focus"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        proxyProtocol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">true</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>You&#39;ll may need to set the <code>externalTrafficPolicy</code> of the Kubernetes Service created for the <code>ProxyFleet</code> to <code>Local</code>, to avoid having one of your node forwarding traffic to another.</p></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Your cloud provider <em>may</em> also expect you of adding some annotations to the Service as well for them to configure properly your load balancer. Check out your cloud provider documentation to learn more.</p></div><h2 id="real-world-example" tabindex="-1">Real-world example <a class="header-anchor" href="#real-world-example" aria-label="Permalink to &quot;Real-world example&quot;">​</a></h2><p>You can find a real-world example of a <code>ProxyFleet</code> with proxy protocol enabled, for Scaleway Cloud Provider, by looking at the <code>with-proxy-protocol</code> example <strong><a href="https://github.com/jeremylvln/Shulker/tree/main/examples/with-proxy-protocol" target="_blank" rel="noreferrer">from the repository</a></strong>.</p>`,10),l=[t];function o(r,p,h,c,d,k){return a(),e("div",null,l)}const E=s(n,[["render",o]]);export{u as __pageData,E as default};
